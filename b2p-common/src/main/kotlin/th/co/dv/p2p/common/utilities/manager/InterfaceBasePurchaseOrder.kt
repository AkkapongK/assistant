package th.co.dv.p2p.common.utilities.manager

import th.co.dv.p2p.corda.base.models.PartyModel
import java.math.BigDecimal
import java.util.*

interface InterfaceBasePurchaseOrder<ITEM: InterfaceBasePurchaseItem>: ModelableEntity {
    val accounting: PartyModel?
    val businessPlaceAddress1: String?
    val businessPlaceAddress2: String? 
    val businessPlaceCity: String? 
    val businessPlaceCountry: String? 
    val businessPlaceDepartment: String? 
    val businessPlaceDistrict: String? 
    val businessPlaceEmail: String? 
    val businessPlaceOfficerEmail: String? 
    val businessPlaceOfficerName: String? 
    val businessPlaceOfficerTelephone: String? 
    val businessPlaceOrganization: String? 
    val businessPlacePostalCode: String? 
    val businessPlaceTaxNumber: String? 
    val businessPlaceTelephone: String? 
    val buyer: PartyModel? 
    val companyBranchCode: String? 
    val companyBranchName: String? 
    val companyCode: String? 
    val companyName: String? 
    val currency: String? 
    val customisedFields: Map<String, Any>?
    val customisedFieldsUpdatedDate: Date? 
    val documentEntryDate: Date?
    val deleteFlag: String?
    val issuedDate: Date? 
    val lastConfirmedBy: String? 
    val lastConfirmedDate: Date? 
    val lastPartyConfirmedBy: PartyModel? 
    val lastPartyUpdatedBy: PartyModel? 
    val lastRejectedBy: String? 
    val lastRejectedDate: Date? 
    val lastRejectedReason: String? 
    val lastRejectedRemark: String? 
    val lastUpdatedBy: String? 
    val lastUpdatedDate: Date? 
    val lifecycle: String? 
    val linearId: String?
    val purchaseOrderNumber: String? 
    val paymentTermCode: String? 
    val paymentTermDays: Long? 
    val paymentTermMonths: Int? 
    val paymentTermDescription: String? 
    var purchaseItems: MutableList<ITEM>
    val referenceField1: String? 
    val referenceField2: String? 
    val referenceField3: String? 
    val referenceField4: String? 
    val referenceField5: String? 
    val seller: PartyModel? 
    var status: String? 
    val vendorAddress1: String? 
    val vendorAddress2: String? 
    val vendorBranchCode: String? 
    val vendorBranchName: String? 
    val vendorCity: String? 
    val vendorCountry: String? 
    val vendorDepartment: String? 
    val vendorDistrict: String? 
    val vendorEmail: String? 
    val vendorName: String? 
    val vendorNumber: String? 
    val vendorOfficerEmail: String? 
    val vendorOfficerName: String? 
    val vendorOfficerTelephone: String? 
    val vendorOrganization: String? 
    val vendorPostalCode: String? 
    val vendorTaxNumber: String? 
    val vendorTelephone: String? 
    val invoiceList: String? 
    val initialTotal: BigDecimal? 
    val remainingTotal: BigDecimal?
    val initialOverDeliveryAmount: BigDecimal?
    val remainingOverDeliveryAmount: BigDecimal?
    val withholdingTaxFormType: String? 
    val withholdingTaxPayType: String? 
    val withholdingTaxRemark: String? 
    val retentionPercent: BigDecimal? 
    val retentionAmount: BigDecimal?
    val retentionTermDays: Int?
    val advancePaymentPercent: BigDecimal? 
    val advancePaymentAmount: BigDecimal? 
    val calendarKey: String? 
    val contractNumber: String?
    val contractLinearId: String?
    val createdDate: Date?
    val updatedDate: Date?
    val retentionRemainingAmount: BigDecimal?
    val cashPerfGuaranteeRate: BigDecimal?
    val cashPerfGuaranteeAmount: BigDecimal?
    val cashPerfGuaranteeRemainingAmount: BigDecimal?
    val cashWarrantyRate: BigDecimal?
    val cashWarrantyAmount: BigDecimal?
    val cashWarrantyRemainingAmount: BigDecimal?
    val vendorSiteId: String?
}