package th.co.dv.p2p.common.utilities.manager

import th.co.dv.p2p.corda.base.models.PartyModel
import java.math.BigDecimal
import java.util.*

interface InterfaceBaseCreditNote<ITEM : InterfaceBaseCreditNoteItem> : ModelableEntity {
    val accounting: PartyModel?
    val adjustmentType: String?
    val bank: PartyModel?
    val businessPlace: String?
    val buyer: PartyModel?
    val buyerApprovedDate: Date?
    val buyerApprovedRemark: String?
    val buyerApprovedUser: String?
    val buyerPostingDate: Date?
    val buyerPostingStatus: String?
    val buyerRejectedDate: Date?
    val buyerRejectedRemark: String?
    val buyerRejectedUser: String?
    val cancelledDate: Date?
    val cancelledRemark: String?
    val cancelledUser: String?
    val companyAddress: String?
    val companyBranchCode: String?
    val companyBranchName: String?
    val companyCode: String?
    val companyName: String?
    val companyTaxNumber: String?
    val companyTelephone: String?
    val creditNoteDate: Date?
    val creditPostingUpdatedDate: Date?
    val currency: String?
    val customisedFields: Map<String, Any>?
    val customisedFieldsUpdatedDate: Date?
    val documentEntryDate: Date?
    val documentEntryMethod: String?
    val externalId: String?
    val invoiceExternalId: String?
    val invoiceLinearId: String?
    val isETaxCreditNote: Boolean?
    val lastEditedBy: String?
    val lastEditedDate: Date?
    val lastMatchUpdatedDate: Date?
    val lifecycle: String?
    val linearId: String?
    val paymentDate: Date?
    val paymentItemLinearId: String?
    val paymentReferenceNumber: String?
    val postingStatus: String?
    val reason: String?
    val referenceField1: String?
    val referenceField2: String?
    val referenceField3: String?
    val referenceField4: String?
    val referenceField5: String?
    val rejectBeforeDOABy: String?
    val rejectBeforeDOADate: Date?
    val rejectBeforeDOARemark: String?
    val requestExternalId: String?
    val requestLinearId: String?
    val resubmitCount: Int?
    val seller: PartyModel?
    val subTotal: BigDecimal?
    val total: BigDecimal?
    val totalReceivable: BigDecimal?
    val unmatchedCode: List<String>?
    val unmatchedReason: String?
    val vatTotal: BigDecimal?
    val vendorAddress: String?
    val vendorBranchCode: String?
    val vendorBranchName: String?
    val vendorName: String?
    val vendorNumber: String?
    val vendorTaxNumber: String?
    val vendorTelephone: String?
    var creditNoteItems: MutableList<ITEM>
    var status: String?
    val rdSubmittedDate: Date?
    val issuedBy: String?
    val correctedAmount: BigDecimal?
    val correctedUnitPrice: BigDecimal?
    val vatTriggerPoint: String?
    val reasonCode: String?
    val creditNoteSubType: String?
    val documentDueDate: Date?
    val taxDocumentNumber: String?
    val taxDocumentLinearId: String?
    val paymentDescription: String?
    val isEwht: Boolean?
    val vendorSiteId: String?
    val documentCode: String?
    val isOnHold: Boolean?
    val lastHeldBy: String?
    val lastHeldRemark: String?
    val lastHeldDate: Date?
    val lastUnheldBy: String?
    val lastUnheldRemark: String?
    val lastUnheldDate: Date?
    val voidVat: Boolean?
}